package com.mercadoLibre.demo.repository;

import java.beans.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.autoconfigure.amqp.RabbitProperties.Cache.Connection;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.mercadoLibre.demo.Entity.Dna;

@Repository
public class RepositoryJDBC {
	
	@Value("${insertar.MySQL:null}")
	private String insertarDNA;
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	public void guardarBD(Dna dna) {		
		
		String sql = insertarDNA;
		int result = jdbcTemplate.update(sql, dna.getAdn(), dna.getTipo());
		
	}
	
	@Value("${consultarH.MySQL:null}")
	private String consultarHuman;
	
	public void consultarH() throws SQLException {
		
		String sql = consultarHuman;
		jdbcTemplate.execute(sql);	

	}

	public class SelectCount{
		 // JDBC driver name and database URL
		 static String driverName = "com.mysql.jdbc.Driver";
		 static String url = "jdbc:mysql://localhost:3306/";

		 // defined and set value in  dbName, userName and password variables
		 static String dbName = "testjdbc";
		 static String userName = "root";
		 static String password = "";
			
		 public static void main(String[] args){
			// create Connection con, and Statement stmt 
			Connection con=null;
			Statement stmt=null;
			try{
				Class.forName(driverName).newInstance();
				con = DriverManager.getConnection(url+dbName, userName, password);
				try{
					stmt = con.createStatement();
					String query = "SELECT COUNT(*) FROM user";
					ResultSet rs=stmt.executeQuery(query);			
					//Extact result from ResultSet rs
					while(rs.next()){
					    System.out.println("COUNT(*)="+rs.getInt("COUNT(*)"));				
					  }
					// close ResultSet rs
					rs.close();
				   } catch(SQLException s){						
						s.printStackTrace();
					 }
				// close Connection and Statement
				con.close();
				stmt.close();
				}catch (Exception e){
					e.printStackTrace();
				 }
		  }
	}


}
